#################################################################
## Function definitions - included from file postinst.functions
#################################################################

# variables needed, please set in the main file
# POSTINST_MOVE_EXT

###############################################################################
# cfgval(variable)
#   read variable ($1) from config file, first match wins
###############################################################################
# from tetex-bin's updmap
cfgval()
{
  cnfFile="$1"
  opt="$2"
  cat "$cnfFile" | sed -n 's/^'"$opt"'[	 =][	 =]*//p' | sed q
}

cleanup()
{
  rc=$?
  [ -n "$tempdir" ] && rm -rf "$tempdir"
  exit $rc
}

updmap_extract(){
  # we extract the settings from an existing 00updmap.cfg that belonged to
  # tetex-base.  If the settings are unchanged from tetex-base's defaults 
  # (2.0.2), ucf will know the md5sum and make the changes 2.0.2->3.0
  # 
  # The file itself is stored, so that tetex-base can also extract its settings.
  conffile=/etc/texmf/updmap.d/00updmap.cfg
  dfltfile=/usr/share/tex-common/00updmap.cfg
  keepfile=/etc/texmf/updmap.d/10tetex-base.cfg.postinst-old
  tetex_base_file=/etc/texmf/updmap.d/10tetex-base.cfg
  oldmd5sum="82884281d955998e22141cf67b45209d"
  options="dvipsPreferOutline pdftexDownloadBase14 dvipdfmDownloadBase14 dvipsDownloadBase35 LW35"

  # is no old version installed?
  test ! -f "$conffile" && return 0 || true
  
  # is it changed?
  if [ ! "$oldmd5sum" = "`md5sum $conffile | cut -d ' ' -f 1`" ]; then
    # changed.

    # stow away a copy for tetex-base
    if [ ! -f $keepfile ]; then
      cat > $keepfile <<EOF
This file contains the parts of what was called 00updmap.cfg in 
teTeX-2.0.2 that now are handled by tetex-base in 10tetex-base.cfg

If you have local changes, please transfer them manually.  Changes 
in the items that are still in 00updmap.cfg have been transferred, 
but changed comments are only here.

EOF
      sed -e '0,/^# Map files should be marked by/ d; 1,/^$/ d' \
	$conffile >> $keepfile
    fi

    # get the new defaults
#     for option in $options; do
#       eval dflt_$option=`cfgval $dfltfile $option`
#     done
    # set the settings we had in tetex-base 2.0.2
    dflt_dvipsPreferOutline=true
    dflt_LW35=URWkb
    dflt_pdftexDownloadBase14=false
    dflt_dvipdfmDownloadBase14=false
    dflt_dvipsDownloadBase35=false

    # compare with current settings, and create a new file
    SETTING_CHANGED=false
    tempdir=`mktemp -d -p $MKTMPDIR`
    tempfile1=`mktemp -p $tempdir`
    trap 'cleanup' HUP INT QUIT BUS PIPE TERM
    cp -p $dfltfile $tempfile1
    for option in $options; do
      eval $option=`cfgval $conffile $option`
      if eval [ ! "\$$option" = "\$dflt_$option" ]; then
	SETTING_CHANGED=true
	tempfile2=`mktemp -p $tempdir`
	optname=$option
	eval optvalue=\$$option
	eval optoldvalue=\$dflt_$option
	sed -e "s@^[[:space:]]*$optname[[:space:]]*$optoldvalue@$optname $optvalue@" $tempfile1 > $tempfile2
	mv $tempfile2 $tempfile1
      fi
    done
    if [ "$SETTING_CHANGED" = "true" ]; then
      # this mv command will give a "conffile changed by you or a script" message next time
      # we change it - but that is exactly what has happened: The user has changed options, 
      # and the script has just transferred them to a new file.
      mv $tempfile1 $conffile
      chmod a+r $conffile
    else
      # this part is unchanged, just remove and copy the default file
      # (a copy is already saved).
      rm -f $tempfile1 $conffile
      cp -p $dfltfile $conffile
    fi
    rm -rf "$tempdir"

  else
    # unchanged, just remove and copy the default file
    rm -f $conffile
    cp -p $dfltfile $conffile
  fi

}

check_texmf(){
  file=$1
  variable=$2
  pattern="$3"
  failed=false
  line=""
  line=`egrep ^$variable $file`
  if [ -z "$line" ]; then
    echo
    echo "An essential entry is missing in $file:"
    echo "No setting of $variable."
    echo "teTeX will not work without it, you need to fix your configuration"
    echo "files.  The version of $file that is provided by the package"
    echo "should be available as ${file}.dpkg-dist"
    echo
    echo "Exiting."
    failed=true
  else
    if ! echo "$line" | egrep -q "$pattern"; then
      echo
      echo "An essential entry is wrong in $file:"
      echo "$variable does not contain"
      echo "$pattern"
      echo "teTeX will not work without it, you need to fix your configuration"
      echo "files.  The version of $file that is provided by the package"
      echo "should be available as ${file}.dpkg-dist"
      echo
      failed=true
    fi
    if [ "$variable" = TEXFONTMAPS ]; then
    # the following is for backwards compatibility; must be dropped once all 
    # font packages follow TDS 1.1
      if ! echo "$line" | grep -q '/dvips//'; then
	echo
	echo "An essential entry is wrong in $file:"
	echo "TEXFONTMAPS does not contain"
	echo "/dvips//"
	echo "teTeX will not work without it, you need to fix your configuration"
	echo "files.  The version of $file that is provided by the package"
	echo "should be available as ${file}.dpkg-dist"
	echo
	failed=true
      fi
    fi
  fi
  if [ "$failed" = "true" ]; then
    echo "Exiting."
    exit 1
  fi
  
}

#################################################################
##  End of function definitions from file postinst.functions
#################################################################
