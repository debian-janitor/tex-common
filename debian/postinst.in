<::>//
#!/bin/sh -e
# 
# postinst maintainer script for the Debian <:=${PACKAGE}:> package.
# $Id$

#include variables
<:=@COPYRIGHT:>//

## Define static variables we need
UCF_FILES="<:=$TEX_COMMON_UCF_FILES:>"
TEXMFSYSVARDIR="<:=$TEXMFSYSVARDIR:>"
UCF="ucf --debconf-ok"
#UCF="ucf -d --debconf-ok --verbose"
OLD_LDAT=/etc/texmf/language.dat
POSTINST_MOVE_EXT="<:=$POSTINST_MOVE_EXT:>"
FONTCACHE_PERMS=<:=$FONTCACHE_PERMS:>


umask 022

# Give a name to the first commandline argument
action=$1
trigger=$2

. <:=${CONFMODULE}:>
db_version 2.0

<:open(FUNCTIONS,'debian/postinst.functions');@FUNCTIONS=<FUNCTIONS>;close(FUNCTIONS):>//
<:=@FUNCTIONS:>//

# <:open(FUNCTIONS,'debian/common.functions');@FUNCTIONS=<FUNCTIONS>;close(FUNCTIONS):>//
# <:=@FUNCTIONS:>//

do_triggers() 
{
    # currently we only support only triggers for updmap.d and
    # language.d changes
    # because all the other calls are quite fast 
    # - call all the update-* scripts (it doesn't hurt)
    # - go through all the triggers and call the respective fmtutil/updmap
    #   calls.

    # in any case call the update-* calls
    update-updmap --quiet
    update-language
    update-fmtutil
    # code from postinst-tex
    if dhit_libkpathsea_configured; then
        # mktexlsr may not be present
        if which mktexlsr >/dev/null; then
            tempfile=$(mktemp -p /tmp mktexlsr.XXXXXXXX)
            printf "Running mktexlsr. This may take some time... "
            if mktexlsr /usr/share/texmf/ /usr/share/texmf-texlive/ /var/lib/texmf/ > $tempfile 2>&1 ; then
                rm -f $tempfile
                echo "done."
            else
                exec >&2
                echo
                echo "mktexlsr failed. Output has been stored in"
                echo "$tempfile"
                echo "Please include this file if you report a bug."
                echo
                exit 1
            fi
        fi
    fi
    case " $trigger " in
        *" texmf-updmap "*) 
         # code from postinst-tex
         if dhit_libkpathsea_configured; then
             if which updmap-sys >/dev/null; then
                    tempfile=$(mktemp -p /tmp updmap.XXXXXXXX)
                    printf "Running updmap-sys. This may take some time... "
                    if updmap-sys > $tempfile 2>&1 ; then
                        rm -f $tempfile
                        echo "done."
                    else
                        exec >&2
                        echo
                        echo "updmap-sys failed. Output has been stored in"
                        echo "$tempfile"
                        echo "Please include this file if you report a bug."
                        echo
                        echo "Sometimes, not accepting conffile updates in /etc/texmf/updmap.d"
                        echo "causes updmap-sys to fail.  Please check for files with extension"
                        echo ".dpkg-dist or .ucf-dist in this directory" 
                        echo
                        exit 1
    	            fi
                fi
            fi
        ;;
    esac
    # do NOT merge these two cases into one, from dpkg's trigger.txt:
    # Generally each trigger name should be tested for separately, as the
    # postinst will often be called for several triggers at once.
    case " $trigger " in
        *" texmf-language "*) 
         # code from postinst.tex
            v=$(kpsewhich -var-value TEXMFSYSVAR)
            c=$(kpsewhich -var-value TEXMFSYSCONFIG)
            TEXMFVAR="$v"
            TEXMFCONFIG="$c"
            export TEXMFVAR TEXMFCONFIG
            fmtcnffile=$(kpsewhich --format='web2c files' fmtutil.cnf)
            X=$(grep "^[[:space:]]*latex[[:space:]]" $fmtcnffile || true)
            if [ -n "$X" ] ; then
                # latex is installed so we can actually try to recreate
                # formats based on language.dat
                tempfile=$(mktemp -p /tmp fmtutil.XXXXXXXX)
                printf "Building formats --byhyphen $(kpsewhich language.dat).\n\tThis may take some time... "
                if fmtutil-sys --byhyphen "$(kpsewhich language.dat)" > $tempfile 2>&1 ; then
                    rm -f $tempfile
                    echo "done."
                else
                    exec >&2
                    echo
                    echo "fmtutil-sys failed. Output has been stored in"
                    echo "$tempfile"
                    echo "Please include this file if you report a bug."
                    echo
                    exit 1
                fi
            fi
        ;;
    esac
}


#################################################################
# Here starts the real action
#################################################################


case $action in
    triggered)
        do_triggers
        ;;

    configure|reconfigure)

# is there a file /etc/texmf/language.dat already? Move it out of the way
    if [ -f $OLD_LDAT ]; then
      old_ldat_md5sum=`md5sum $OLD_LDAT`
      # do nothing if the md5sum matches sarge's or woody's default:
      if [ ! "$old_ldat_md5sum" = fe9baf0768ade79a585a9df568dac5f6 ] && \
	[ ! "$old_ldat_md5sum" = 1d2d9b25a41ab1cec892bd3382af7645 ]; then
	cat > $OLD_LDAT.$POSTINST_MOVE_EXT <<EOF
This file is no longer used and has therefore been renamed by the postinst 
script of the tetex-base package.

Please use the mechanism described in update-language(8) instead.

EOF
	cat $OLD_LDAT >> $OLD_LDAT.$POSTINST_MOVE_EXT 
      fi
      rm $OLD_LDAT
    fi


# normal install    
    # handle ucf-managed configuration files
    for file in $UCF_FILES; do
      $UCF /usr/share/tex-common/`basename $file` /etc/texmf/$file
      if test -x "`which ucfr`" ; then
        ucfr tex-common /etc/texmf/$file
      fi
    done

# remove left over fmt/efmt/log files in /usr/share/texmf/web2c/.  If they are
# there, it's because of an old bug or user misconfiguration, and they are
# never registered to dpkg.
#
# move out of the way old config files
# 
    if [ -d /usr/share/texmf/web2c ] ; then
      rm -rf /usr/share/texmf/web2c/*.fmt
      rm -rf /usr/share/texmf/web2c/*.efmt
      rm -rf /usr/share/texmf/web2c/*.base
      rm -rf /usr/share/texmf/web2c/*.log
      for cfgfile in fmtutil.cnf updmap.cfg ; do
        oldname=/usr/share/texmf/web2c/$cfgfile
	newname=/usr/share/texmf/web2c/$cfgfile.pre-upgrade
        if [ -r $oldname ] ; then
	  cat - > $newname <<EOF
# This file conflicts with the new configuration location.
# Please merge your changes to the correct location.

EOF
	  cat $oldname >> $newname
	  rm $oldname
	fi
      done
    fi

# if the machine was originally upgraded from woody to sarge, and now
# to etch, it will have a bogus generated configuration file.  This
# will break with TeXlive, therefore we remove it
    bogusfile=/etc/texmf/fmt.d/99postinst.cnf
    if [ -f $bogusfile ]; then
      tmpfile=`mktemp`
      egrep -v \
	"mf[[:space:]]*mf[[:space:]]*-[[:space:]]*mf.ini|\
mfw[[:space:]]*mfw[[:space:]]*-[[:space:]]*mf.ini|\
pdftex[[:space:]]*pdftex[[:space:]]*language.dat[[:space:]]*pdftex.ini|\
omega[[:space:]]*omega[[:space:]]*language.dat*[[:space:]]*omega.ini" \
	$bogusfile > $tmpfile
      if !  egrep -v '^#|^[[:space:]]*$' $tmpfile >/dev/null; then
	# only comments in tmpfile
	cat >> $bogusfile.bak <<EOF

This file has been renamed by the post-installation script of
tex-common.  It is unused and contains only lines that were
erroneously detected as being a local configuration file change.


EOF
	cat $bogusfile >> $bogusfile.bak
	chmod 664 $bogusfile.bak
	chown root:root $bogusfile.bak
	rm $bogusfile
      fi
      rm $tmpfile
    fi



    update-texmf
# Now we check for some essential settings
    checkfailed=false
    check_texmf /etc/texmf/texmf.d/55Fonts.cnf TEXFONTMAPS \
'\$TEXMF/{fonts/,}map//;\$TEXMF/dvips//|\.;\$TEXMF{/fonts/map,}{/\$progname,/pdftex,/dvips,}//'
    check_texmf /etc/texmf/texmf.cnf TEXFONTMAPS \
'\$TEXMF/{fonts/,}map//;\$TEXMF/dvips//|\.;\$TEXMF{/fonts/map,}{/\$progname,/pdftex,/dvips,}//'
    check_texmf /etc/texmf/texmf.d/05TeXMF.cnf TEXMFMAIN '/usr/share/texmf'
    check_texmf /etc/texmf/texmf.cnf TEXMFMAIN '/usr/share/texmf'
    check_texmf /etc/texmf/texmf.d/05TeXMF.cnf TEXMFDIST \
          '/usr/share/texmf-{tetex,texlive}|/usr/share/texmf-{texlive,tetex}|/usr/share/texmf-texlive'
    check_texmf /etc/texmf/texmf.cnf TEXMFDIST \
          '/usr/share/texmf-{tetex,texlive}|/usr/share/texmf-{texlive,tetex}|/usr/share/texmf-texlive'
    check_texmf /etc/texmf/texmf.d/05TeXMF.cnf 'TEXMF( |=)' TEXMFSYSCONFIG
    check_texmf /etc/texmf/texmf.cnf 'TEXMF( |=)' TEXMFSYSCONFIG
    check_texmf /etc/texmf/texmf.d/05TeXMF.cnf 'TEXMF( |=)' TEXMFSYSVAR
    check_texmf /etc/texmf/texmf.cnf 'TEXMF( |=)' TEXMFSYSVAR
    check_texmf /etc/texmf/texmf.d/05TeXMF.cnf 'TEXMF( |=)' TEXMFMAIN
    check_texmf /etc/texmf/texmf.cnf 'TEXMF( |=)' TEXMFMAIN
    check_texmf /etc/texmf/texmf.d/05TeXMF.cnf 'TEXMF( |=)' TEXMFDIST
    check_texmf /etc/texmf/texmf.cnf 'TEXMF( |=)' TEXMFDIST

    if [ $checkfailed = true ]; then
      echo "Unrecoverable errors in your configuration have been detected" >&2
      echo "in configuration files in /etc/texmf/." >&2
      echo "If you've not seen debconf error messages,  see your mail for details" >&2
      echo "or use an interactive debconf frontend." >&2
      echo >&2
      echo "Exiting" >&2

      exit 1
    fi


    #
    # call trigger action
    # that calls mktexlsr if possible, and update-*
    # we set the triggers updmap.d
    #
    trigger=texmf-updmap
    do_triggers

    # now call the equivalent of fmtutil-sys --all explicitely
    if dhit_libkpathsea_configured; then
        dhit_build_format --all
    fi


    # create empty dirs in /usr/local/share/
    if [ ! -e /usr/local/share/texmf ]
    then
      if mkdir -p /usr/local/share/texmf 2>/dev/null
      then
        chown root:staff /usr/local/share/texmf
        chmod 2775 /usr/local/share/texmf
      fi
    fi

    ;;
  *)
    ;;
esac


#DEBHELPER#

### Local Variables:
### perl-indent-level: 4
### tab-width: 4
### indent-tabs-mode: nil
### End:
# vim:set tabstop=4 expandtab: #
